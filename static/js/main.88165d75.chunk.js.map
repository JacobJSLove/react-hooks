{"version":3,"sources":["api/jsonPlaceholder.js","components/useResources.js","components/ResourceList.js","components/UserList.js","components/App.js","index.js"],"names":["axios","create","baseURL","useResources","patch","useState","resources","setResources","useEffect","a","jsonPlaceholder","get","respone","data","ResourceList","length","map","id","title","key","UserList","users","name","App","setPatch","onClick","ReactDOM","render","document","querySelector"],"mappings":"8OAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yCC4BEC,EA5BM,SAACC,GAAU,MAYMC,mBAAS,IAZf,mBAYrBC,EAZqB,KAYVC,EAZU,KAwB5B,OAVAC,oBAAU,YACN,sCAAC,WAAOJ,GAAP,eAAAK,EAAA,qEACyBC,EAAgBC,IAAhB,WAAwBP,IADjD,OACSQ,EADT,OAEGL,EAAaK,EAAQC,MAFxB,yCAAD,sDAGGT,IACJ,CAACA,IAKGE,GCPIQ,EAhBM,SAAC,GAAe,IAAbV,EAAY,EAAZA,MAEdE,EAAYH,EAAaC,GAE/B,OAAyB,IAArBE,EAAUS,OACH,2CAGP,4BACKT,EAAUU,IAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,MAAL,OACd,wBAAIC,IAAKF,GAAKC,OCKZE,EAfE,WACb,IAAMC,EAAQlB,EAAa,SAE3B,OAAqB,IAAjBkB,EAAMN,OACC,2CAGP,4BACKM,EAAML,IAAI,gBAAEC,EAAF,EAAEA,GAAGK,EAAL,EAAKA,KAAL,OACV,wBAAIH,IAAKF,GAAKK,OCOZC,EAhBH,WAAO,IAAD,EACYlB,mBAAS,SADrB,mBACPD,EADO,KACAoB,EADA,KAId,OACI,6BACI,kBAAC,EAAD,MACA,6BACI,4BAAQC,QAAS,kBAAMD,EAAS,WAAhC,SACA,4BAAQC,QAAS,kBAAMD,EAAS,WAAhC,UAEJ,kBAAC,EAAD,CAAcpB,MAAOA,MCVjCsB,IAASC,OACL,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.88165d75.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n});","import { useState, useEffect } from 'react';\r\nimport jsonPlaceholder from '../api/jsonPlaceholder';\r\n\r\nconst useResources = (patch) => {\r\n    // if [ ] = componentDidMount called once\r\n    // without [] is called every time component is rendered\r\n    // [resource] check if is the same resource was posts and call only if no posts again\r\n    // if don't change dont run inside arrow function\r\n\r\n    // workaround if we dont want to make new function\r\n    // const fetchResource = async (resource) => {\r\n    //         const respone = await jsonPlaceholder.get(`/${resource}`);\r\n    //         setResources(respone.data);\r\n    //     }\r\n\r\n    const [resources, setResources] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async (patch) => {\r\n            const respone = await jsonPlaceholder.get(`/${patch}`);\r\n            setResources(respone.data);\r\n        })(patch)\r\n    }, [patch]);\r\n\r\n    // Called with prevProps\r\n    // componentDidUpdate(prevProps)\r\n\r\n    return resources;\r\n};\r\n\r\n\r\nexport default useResources;","import React from 'react';\r\nimport useResources from './useResources';\r\n\r\n// recive props\r\nconst ResourceList = ({ patch }) => {\r\n\r\n    const resources = useResources(patch);\r\n\r\n    if (resources.length === 0) {\r\n        return <div>Loading...</div>\r\n    };\r\n    return (\r\n        <ul>\r\n            {resources.map(({id,title}) => (\r\n             <li key={id}>{title}</li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ResourceList;","import React from 'react';\r\nimport useResources from './useResources';\r\n\r\n// recive props\r\nconst UserList = () => {\r\n    const users = useResources('users');\r\n\r\n    if (users.length === 0) {\r\n        return <div>Loading...</div>\r\n    };\r\n    return (\r\n        <ul>\r\n            {users.map(({id,name}) => (\r\n             <li key={id}>{name}</li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React, { useState } from 'react';\r\nimport ResourceList from './ResourceList';\r\nimport UserList from './UserList';\r\n\r\nconst App = () => {\r\n    const [patch, setPatch] = useState('posts');\r\n\r\n\r\n    return (\r\n        <div>\r\n            <UserList />\r\n            <div>\r\n                <button onClick={() => setPatch('posts')}>Posts</button>\r\n                <button onClick={() => setPatch('todos')}>Todos</button>\r\n            </div>\r\n            <ResourceList patch={patch} />\r\n    \t</div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />, document.querySelector('#root'));"],"sourceRoot":""}